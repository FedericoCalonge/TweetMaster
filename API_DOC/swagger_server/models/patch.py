# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Patch(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, columna_a_modif: int=None, campo_columna: datetime=None):  # noqa: E501
        """Patch - a model defined in Swagger

        :param columna_a_modif: The columna_a_modif of this Patch.  # noqa: E501
        :type columna_a_modif: int
        :param campo_columna: The campo_columna of this Patch.  # noqa: E501
        :type campo_columna: datetime
        """
        self.swagger_types = {
            'columna_a_modif': int,
            'campo_columna': datetime
        }

        self.attribute_map = {
            'columna_a_modif': 'columnaAModif',
            'campo_columna': 'campoColumna'
        }

        self._columna_a_modif = columna_a_modif
        self._campo_columna = campo_columna

    @classmethod
    def from_dict(cls, dikt) -> 'Patch':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The patch of this Patch.  # noqa: E501
        :rtype: Patch
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columna_a_modif(self) -> int:
        """Gets the columna_a_modif of this Patch.


        :return: The columna_a_modif of this Patch.
        :rtype: int
        """
        return self._columna_a_modif

    @columna_a_modif.setter
    def columna_a_modif(self, columna_a_modif: int):
        """Sets the columna_a_modif of this Patch.


        :param columna_a_modif: The columna_a_modif of this Patch.
        :type columna_a_modif: int
        """
        if columna_a_modif is None:
            raise ValueError("Invalid value for `columna_a_modif`, must not be `None`")  # noqa: E501

        self._columna_a_modif = columna_a_modif

    @property
    def campo_columna(self) -> datetime:
        """Gets the campo_columna of this Patch.


        :return: The campo_columna of this Patch.
        :rtype: datetime
        """
        return self._campo_columna

    @campo_columna.setter
    def campo_columna(self, campo_columna: datetime):
        """Sets the campo_columna of this Patch.


        :param campo_columna: The campo_columna of this Patch.
        :type campo_columna: datetime
        """
        if campo_columna is None:
            raise ValueError("Invalid value for `campo_columna`, must not be `None`")  # noqa: E501

        self._campo_columna = campo_columna
