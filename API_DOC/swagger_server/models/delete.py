# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Delete(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id_c: int=None, email: datetime=None):  # noqa: E501
        """Delete - a model defined in Swagger

        :param id_c: The id_c of this Delete.  # noqa: E501
        :type id_c: int
        :param email: The email of this Delete.  # noqa: E501
        :type email: datetime
        """
        self.swagger_types = {
            'id_c': int,
            'email': datetime
        }

        self.attribute_map = {
            'id_c': 'idC',
            'email': 'email'
        }

        self._id_c = id_c
        self._email = email

    @classmethod
    def from_dict(cls, dikt) -> 'Delete':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The delete of this Delete.  # noqa: E501
        :rtype: Delete
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_c(self) -> int:
        """Gets the id_c of this Delete.


        :return: The id_c of this Delete.
        :rtype: int
        """
        return self._id_c

    @id_c.setter
    def id_c(self, id_c: int):
        """Sets the id_c of this Delete.


        :param id_c: The id_c of this Delete.
        :type id_c: int
        """
        if id_c is None:
            raise ValueError("Invalid value for `id_c`, must not be `None`")  # noqa: E501

        self._id_c = id_c

    @property
    def email(self) -> datetime:
        """Gets the email of this Delete.


        :return: The email of this Delete.
        :rtype: datetime
        """
        return self._email

    @email.setter
    def email(self, email: datetime):
        """Sets the email of this Delete.


        :param email: The email of this Delete.
        :type email: datetime
        """
        if email is None:
            raise ValueError("Invalid value for `email`, must not be `None`")  # noqa: E501

        self._email = email
